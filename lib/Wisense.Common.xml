<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wisense.Common</name>
    </assembly>
    <members>
        <member name="M:Wisense.Common.Utils.ClassUtil.GetInstance``1(System.String,System.String)">
            <summary>
            通过默认构造函数反射对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className"></param>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.ClassUtil.GetInstance``1(System.String,System.String,System.Object[])">
            <summary>
            通过指定参数的构造函数反射对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className"></param>
            <param name="assemblyName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Wisense.Common.Item.IItemWorkflow">
            <summary>
            对象工作流
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IRelationship">
            <summary>
            对象框架"关联对象"
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IGeneralItem">
            <summary>
            通用对象，与“对象类型”顶层实例“通用对象”对应
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IBaseItem">
            <summary>
            对象框架顶层接口
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetAttributes">
            <summary>
            获取特性集
            </summary>
            <returns>特性集</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetAttribute(System.String)">
            <summary>
            获取特性
            </summary>
            <param name="name">特性名称（不区分大小写）</param>
            <returns>特性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsWritableProperty(System.String)">
            <summary>
            判断指定的属性项值是否可修改。
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否可修改</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsModifiedProperty(System.String)">
            <summary>
            判断指定的属性项值是否发生更改。
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否发生更改</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsReadonlyProperty(System.String)">
            <summary>
            是否只读属性
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否只读</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.ContainsProperty(System.String)">
            <summary>
            判断对象是否包含指定的属性
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.ContainsAttribute(System.String)">
            <summary>
            判断对象是否包含指定的特性
            </summary>
            <param name="dbColumnName">特性名称</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetProperty(System.String)">
            <summary>
            获取当前属性值
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>当前属性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetProperty(System.String,Wisense.Common.Item.ItemDataVersion)">
            <summary>
            指定对象数据版本， 获取当前属性值
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <param name="version">对象数据版本</param>
            <returns>属性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetProperty``1(System.String)">
            <summary>
            获取对象属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="columnName">数据库列名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.GetProperty``1(System.String,Wisense.Common.Item.ItemDataVersion)">
            <summary>
            获取对象指定数据版本的属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="columnName">数据库列名</param>
            <param name="version">对象数据版本</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.SetProperty(System.String,System.Object)">
            <summary>
            设置对象当前属性值
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.SetProperty``1(System.String,``0)">
            <summary>
            设置对象属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类（实现IBaseItem）</typeparam>
            <param name="columnName">数据库列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Load">
            <summary>
            对象数据加载
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Refresh">
            <summary>
            刷新对象数据，一次刷新相当于重新延迟加载一次。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Accept">
            <summary>
            接受对象数据（接受对象最后一次Original状态以来所有的更改，用当前值覆盖原始值）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Reset">
            <summary>
            复位对象数据（丢弃对象最后一次Original状态以来所有的更改）。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Save">
            <summary>
            对象保存，持久化对象更改
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Delete">
            <summary>
            删除对象，将对象的状态置为Deleted
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Verify">
            <summary>
            数据验证
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsExists">
            <summary>
            当前对象是否存在。
            对于已持久化对象，当数据库中有对应的记录时才返回true；
            对于新建对象，始终返回false
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsInstanceOf(Wisense.Common.Item.IItemType)">
            <summary>
            当前对象是否是指定的对象类型（含子孙后代）的实例
            </summary>
            <param name="itemType">指定的对象类型</param>
            <returns>是否是指定对象类型（含子孙后代）的实例</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.MoveTo(Wisense.Common.Item.IItemType)">
            <summary>
            将当前对象实例数据迁移到其他对象类中。当前对象删除。
            该操作仅迁移原对象类和目标对象类中共同的属性项值和关联对象（AB）实例，其余的将损失。
            </summary>
            <param name="destination">目标对象类</param>
            <returns>目的对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Replicate">
            <summary>
            浅复制一个对象副本，仅创建，未（不）保存；
            只复制当前对象本身，不级联复制其关联对象；
            此对象副本拥有与源对象的相同的属性值。
            </summary>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Replicate(Wisense.Common.Item.IItemCollection)">
            <summary>
            深复制一个对象副本，仅创建，未（不）保存；
            相当于一系列的浅复制：浅复制当前对象->浅复制当前对象的关联对象->浅复制当前对象的关联对象的关联对象->...以此递推。
            会级联浅复制该对象的关联对象，以及关联对象的关联对象,以此递推，将这些对象填充到relationshipItems集合中。
            此对象副本及其层级复制的关联对象拥有与源对象的相同的属性值。
            </summary>
            <param name="relationshipItems">事先构造好的对象容器【relationshipItems = new ItemCollection();】，用以填充级联复制创建的关联对象（级联复制的关联对象，及其关联对象的关联对象，以此递推）</param>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.IsEqualTo(Wisense.Common.Item.IBaseItem)">
            <summary>
            判断与item是否等值（所有属性值相等）
            </summary>
            <param name="item">指定比较的目的对象</param>
            <returns>是否等值</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.TransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            使用指定的转换对象进行状态转换
            </summary>
            <param name="transition">生命周期转换对象</param>
            <returns>是否已转换</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.PretransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换前处理
            </summary>
            
            <param name="transition">状态转换对象</param>
            
            <returns>是否继续状态转换处理</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.AftertransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换后处理
            </summary>
            
            <param name="transition">状态转换对象</param>
            
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Presaving">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存前处理，当调用Save时由框架触发（Save前）
            </summary>
            <returns>是否继续保存操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Aftersaved">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存后处理，当调用Save时由框架触发（Save后）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.PresettingProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值前处理，当调用SetProperty时由框架触发（SetProperty前）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
            <returns>是否继续设值操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.AftersetedProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值后处理，当调用SetProperty时由框架触发（SetProperty后）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Predeleting">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除前处理
            </summary>
            <returns>是否继续删除操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Afterdeleted">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Precreating">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建前处理
            </summary>
            <returns>是否继续新建操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Aftercreated">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Preupdating">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改前处理
            </summary>
            <returns>是否继续修改操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Afterupdated">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Afternewed">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建对象（未保存）后处理，ItemFactory.NewItem...时触发
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IBaseItem.Afterreplicated(Wisense.Common.Item.IBaseItem)">
            <summary>
            【该方法由对象框架回调，不要直接调用】浅复制对象（创建对象副本）后处理
            </summary>
            <param name="replication">已创建的当前对象的副本</param>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Item(System.String)">
            <summary>
            this索引器
            </summary>
            <param name="columnName">数据库列名</param>
            <returns>属性值</returns>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Item(System.String,Wisense.Common.Item.ItemDataVersion)">
            <summary>
            this索引器
            </summary>
            <param name="columnName">数据库列名</param>
            <param name="version">对象数据版本</param>
            <returns>属性值</returns>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Id">
            <summary>
            获取对象Id
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.ItemTypeId">
            <summary>
            获取、设置对象类Id
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.ItemType">
            <summary>
            获取对象类型（元数据）。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.KeyedName">
            <summary>
            获取关键名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.CreatedOn">
            <summary>
            获取创建时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Creator">
            <summary>
            获取创建人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Owener">
            <summary>
            获取拥有者
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.ModifiedOn">
            <summary>
            获取修改时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Modificator">
            <summary>
            获取修改人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.State">
            <summary>
            获取、设置生命周期状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Locker">
            <summary>
            获取、设置锁定人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.IsCurrent">
            <summary>
            获取、设置是否当前
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.MajorRev">
            <summary>
            获取、设置主修订号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Manager">
            <summary>
            获取、设置管理人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.MinorRev">
            <summary>
            获取、设置次修订号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.IsReleased">
            <summary>
            获取、设置是否发布
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.NotLockable">
            <summary>
            获取、设置能否锁定
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Generation">
            <summary>
            获取、设置代
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.NewVersion">
            <summary>
            获取、设置是否新版本
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Config">
            <summary>
            获取设置配置
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Permission">
            <summary>
            获取权限对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.ItemRef">
            <summary>
            获取对象引用
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.Decorated">
            <summary>
            获取内部被装饰对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.ItemState">
            <summary>
            对象状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.RICC">
            <summary>
            对象的关联对象集合的集合。
            注意此集合为当前对象的固有逻辑关联对象集合的集合（不受权限和过滤条件的控制），与检索有本质区别。
            如要检索，请自行构造一个RICC。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.IsDetached">
            <summary>
            对象是否分离（不在当前运行时上下文中，即对象不由当前运行时上下文中生成--由另一个上下文产生，跨上下文）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IBaseItem.IsDeleting">
            <summary>
            对象是否正在删除
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationship.SortOrder">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationship.Source">
            <summary>
            源对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationship.Related">
            <summary>
            被关联对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemWorkflow.Identity">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemWorkflow.ClassPath">
            <summary>
            类路径
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemWorkflow.WorkflowTemplate">
            <summary>
            工作流模板（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemWorkflow.ItemType">
            <summary>
            对象类型（源对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IIconLibrary">
            <summary>
            图标库
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIconLibrary.Name">
            <summary>
            库名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIconLibrary.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIconLibrary.IconLibFiles">
            <summary>
            包含文件关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IAttribute">
            <summary>
            对象框架，对象特性 @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IAttribute.GetValueType">
            <summary>
            特性值类型
            </summary>
            <returns>特性值类型</returns>
        </member>
        <member name="M:Wisense.Common.Item.IAttribute.GetSingleValue">
            <summary>
            获取单值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IAttribute.GetValueSet">
            <summary>
            获取值集合
            </summary>
            <returns>值集合</returns>
        </member>
        <member name="M:Wisense.Common.Item.IAttribute.GetLowerLimit(System.Boolean@)">
            <summary>
            获取值下限（最小值）
            </summary>
            <param name="included">是否包含</param>
            <returns>下限</returns>
        </member>
        <member name="M:Wisense.Common.Item.IAttribute.GetUpperLimit(System.Boolean@)">
            <summary>
            获取上限（最大值）
            </summary>
            <param name="included">是否包含</param>
            <returns>上限</returns>
        </member>
        <member name="P:Wisense.Common.Item.IAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IAttribute.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IAttribute.Unit">
            <summary>
            计量单位
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.FilterStrings(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This function uses Regex search strings to remove HTML tags which are
             targeted in Cross-site scripting (XSS) attacks.  This function will evolve
             to provide more robust checking as additional holes are found.
             </summary>
             <param name="strInput">This is the string to be filtered</param>
             <returns>Filtered UserInput</returns>
             <remarks>
             This is a private function that is used internally by the FormatDisableScripting function
             </remarks>
             <history>
                 [cathal]        3/06/2007   Created
             </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.FormatDisableScripting(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This function uses Regex search strings to remove HTML tags which are
             targeted in Cross-site scripting (XSS) attacks.  This function will evolve
             to provide more robust checking as additional holes are found.
             </summary>
             <param name="strInput">This is the string to be filtered</param>
             <returns>Filtered UserInput</returns>
             <remarks>
             This is a private function that is used internally by the InputFilter function
             </remarks>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.FormatAngleBrackets(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This filter removes angle brackets i.e.
             </summary>
             <param name="strInput">This is the string to be filtered</param>
             <returns>Filtered UserInput</returns>
             <remarks>
             This is a private function that is used internally by the InputFilter function
             </remarks>
             <history>
             	[Cathal] 	6/1/2006	Created to fufill client request
             </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.FormatMultiLine(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This filter removes CrLf characters and inserts br
             </summary>
             <param name="strInput">This is the string to be filtered</param>
             <returns>Filtered UserInput</returns>
             <remarks>
             This is a private function that is used internally by the InputFilter function
             </remarks>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.FormatRemoveSQL(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This function verifies raw SQL statements to prevent SQL injection attacks
             and replaces a similar function (PreventSQLInjection) from the Common.Globals.vb module
             </summary>
             <param name="strSQL">This is the string to be filtered</param>
             <returns>Filtered UserInput</returns>
             <remarks>
             This is a private function that is used internally by the InputFilter function
             </remarks>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.IncludesMarkup(System.String)">
            -----------------------------------------------------------------------------
             <summary>
             This function determines if the Input string contains any markup.
             </summary>
             <param name="strInput">This is the string to be checked</param>
             <returns>True if string contains Markup tag(s)</returns>
             <remarks>
             This is a private function that is used internally by the InputFilter function
             </remarks>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.InputFilter(System.String,Wisense.Common.Utils.InputFilterUtil.FilterFlag)">
            -----------------------------------------------------------------------------
             <summary>
             This function applies security filtering to the UserInput string.
             </summary>
             <param name="userInput">This is the string to be filtered</param>
             <param name="filterType">Flags which designate the filters to be applied</param>
             <returns>Filtered UserInput</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Wisense.Common.Utils.InputFilterUtil.ValidateInput(System.String,Wisense.Common.Utils.InputFilterUtil.FilterFlag)">
            -----------------------------------------------------------------------------
             <summary>
             This function applies security filtering to the UserInput string, and reports
             whether the input string is valid.
             </summary>
             <param name="userInput">This is the string to be filtered</param>
             <param name="filterType">Flags which designate the filters to be applied</param>
             <returns></returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:Wisense.Common.Utils.InputFilterUtil.FilterFlag">
            -----------------------------------------------------------------------------
             <summary>
             The FilterFlag enum determines which filters are applied by the InputFilter
             function.  The Flags attribute allows the user to include multiple
             enumerated values in a single variable by OR'ing the individual values
             together.
             </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:Wisense.Common.Utils.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
            Microsoft Excel 11.0 Object Library
        </member>
        <!-- 对于成员“M:Wisense.Common.Utils.ExcelHelper.DataTable1Excel(System.Data.DataTable)”忽略有格式错误的 XML 注释 -->
        <member name="M:Wisense.Common.Utils.ExcelHelper.DataTable2Excel(System.Data.DataTable)">
            <summary>
            导出Excel文件，转换为可读模式
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.DataTable3Excel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel文件，并自定义文件名
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.OutputToExcel(System.Data.DataSet,System.String)">
            <summary>
            DataSetToExcel
            </summary>
            <param name="ds">数据源ds</param>
            <param name="ExcelFilePath">路径</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.GetExcelTables(System.String)">
            <summary>
            获取Excel文件数据表列表
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.InputFromExcel(System.String,System.String)">
            <summary>
            将Excel文件导出至DataTable(第一行作为表头)
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.InputFromExcel(System.String)">
            <summary>
            将excel读到DataSet内
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取Excel文件指定数据表的数据列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
        </member>
        <member name="M:Wisense.Common.Utils.ExcelHelper.GetLocalExcelVer">
            <summary>
            获取本机上office的版本，如果没有安装返回空字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Wisense.Common.Item.BaseItem">
            <summary>
            抽象基础对象,对象框架顶层类
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.GetAttributes">
            <summary>
            获取特性集
            </summary>
            <returns>特性集</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.GetAttribute(System.String)">
            <summary>
            获取特性
            </summary>
            <param name="name">特性名称（不区分大小写）</param>
            <returns>特性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.IsModifiedProperty(System.String)">
            <summary>
            判断指定的属性项值是否发生更改。
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否发生更改</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.IsWritableProperty(System.String)">
            <summary>
            判断指定的属性项值是否可修改。
            </summary>
            <param name="dbColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.ContainsAttribute(System.String)">
            <summary>
            判断对象是否包含指定的特性
            </summary>
            <param name="dbColumnName">特性名称</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.GetProperty``1(System.String)">
            <summary>
            获取对象属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="columnName">数据库列名</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.GetProperty``1(System.String,Wisense.Common.Item.ItemDataVersion)">
            <summary>
            获取对象指定数据版本的属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="dbColumnName">数据库列名</param>
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.SetProperty``1(System.String,``0)">
            <summary>
            设置对象属性值
            </summary>
            <typeparam name="T">与Wisense数据类型对应的.net类型，包括自定义的item类（实现IBaseItem）</typeparam>
            <param name="columnName">数据库列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Load">
            <summary>
            对象数据加载
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Refresh">
            <summary>
            刷新对象数据，一次刷新相当于重新延迟加载一次。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Accept">
            <summary>
            接受对象数据（接受对象最后一次Original状态以来所有的更改，用当前值覆盖原始值）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Reset">
            <summary>
            复位对象数据（丢弃对象最后一次Original状态以来所有的更改）。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Save">
            <summary>
            对象保存，持久化对象更改
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Delete">
            <summary>
            删除对象，将对象的状态置为Deleted
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.IsEqualTo(Wisense.Common.Item.IBaseItem)">
            <summary>
            判断与item是否等值（所有属性值相等）
            </summary>
            <param name="item">指定比较的目的对象</param>
            <returns>是否等值</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.IsExists">
            <summary>
            当前对象是否存在。
            对于已持久化对象，当数据库中有对应的记录时才返回true；
            对于新建对象，始终返回false
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.IsInstanceOf(Wisense.Common.Item.IItemType)">
            <summary>
            当前对象是否是指定的对象类型（含子孙后代）的实例
            </summary>
            <param name="itemType">指定的对象类型</param>
            <returns>是否是指定对象类型（含子孙后代）的实例</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.MoveTo(Wisense.Common.Item.IItemType)">
            <summary>
            将当前对象实例数据迁移到其他对象类中。当前对象删除。
            该操作仅迁移原对象类和目标对象类中共同的属性项值和关联对象（AB）实例，其余的将损失。
            </summary>
            <param name="destination">目标对象类</param>
            <returns>目的对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Replicate">
            <summary>
            浅复制一个对象副本，仅创建，未（不）保存；
            只复制当前对象本身，不级联复制其关联对象；
            此对象副本拥有与源对象的相同的属性值。
            </summary>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Afterreplicated(Wisense.Common.Item.IBaseItem)">
            <summary>
            【该方法由对象框架回调，不要直接调用】浅复制对象（创建对象副本）后处理
            </summary>
            <param name="replication">已创建的当前对象的副本</param>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Replicate(Wisense.Common.Item.IItemCollection)">
            <summary>
            深复制一个对象副本，仅创建，未（不）保存；
            相当于一系列的浅复制：浅复制当前对象->浅复制当前对象的关联对象->浅复制当前对象的关联对象的关联对象->...以此递推。
            会级联浅复制该对象的关联对象，以及关联对象的关联对象,以此递推，将这些对象填充到relationshipItems集合中。
            此对象副本及其层级复制的关联对象拥有与源对象的相同的属性值。
            </summary>
            <param name="relationshipItems">事先构造好的对象容器【relationshipItems = new ItemCollection();】，用以填充级联复制创建的关联对象（级联复制的关联对象，及其关联对象的关联对象，以此递推）</param>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.TransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            使用指定的转换对象进行状态转换
            </summary>
            <param name="transition">生命周期转换对象</param>
            <returns>是否已转换</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.PretransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换前处理
            </summary>
            <param name="fromState">从...状态</param>
            <param name="transition">状态转换对象</param>
            <param name="toState">到...状态</param>
            <returns>是否继续状态转换处理</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.AftertransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换后处理
            </summary>
            <param name="fromState">从...状态</param>
            <param name="transition">状态转换对象</param>
            <param name="toState">到...状态</param>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Presaving">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存前处理，当调用Save时由框架触发（Save前）
            </summary>
            <returns>是否继续保存操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Aftersaved">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存后处理，当调用Save时由框架触发（Save后）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.PresettingProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值前处理，当调用SetProperty时由框架触发（SetProperty前）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
            <returns>是否继续设值操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.AftersetedProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值后处理，当调用SetProperty时由框架触发（SetProperty后）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Predeleting">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除前处理
            </summary>
            <returns>是否继续删除操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Afterdeleted">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Precreating">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建前处理
            </summary>
            <returns>是否继续新建操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Aftercreated">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Preupdating">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改前处理
            </summary>
            <returns>是否继续修改操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Afterupdated">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.BaseItem.Afternewed">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建对象（未保存）后处理，ItemFactory.NewItem...时触发
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.BaseItem.IsDetached">
            <summary>
            对象是否分离（不在当前运行时上下文中，即对象不由当前运行时上下文中生成--由另一个上下文产生，跨上下文）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.BaseItem.IsDeleting">
            <summary>
            对象是否正在删除
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IIdentity">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IServerExtensionPoint">
            <summary>
            服务层扩展点
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IServerExtensionPoint.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IServerExtensionPoint.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPermissionIdentityDetail">
            <summary>
            对象权限明细
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentityDetail.Allow">
            <summary>
            允许
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentityDetail.Deny">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentityDetail.PermissionItem">
            <summary>
            权限项（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentityDetail.PermissionIdentity">
            <summary>
            对象权限用户标识（源对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IMainMenuDirectory">
            <summary>
            主菜单目录
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IMainMenuItem">
            <summary>
            主菜单项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItem.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItem.ShowMode">
            <summary>
            显示方式
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItem.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuDirectory.DirectorySubMainMenuItem">
            <summary>
            目录子菜单项关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IFileSuffix">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="T:Wisense.Common.IMainDatabase">
            <summary>
            系统主数据库
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.IMainDatabase.CreateIndex(System.String,System.String)">
            <summary>
            为wisense服务端程序开放创建索引的接口
            </summary>
            <param name="tableName">表名</param>
            <param name="columnName">列名</param>
        </member>
        <member name="P:Wisense.Common.IMainDatabase.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Wisense.Common.IMainDatabase.SqlIdentifierLeftChar">
            <summary>
            sql语句标识符左字符
            </summary>
        </member>
        <member name="P:Wisense.Common.IMainDatabase.SqlIdentifierRightChar">
            <summary>
            sql语句标识符右字符
            </summary>
        </member>
        <member name="P:Wisense.Common.IMainDatabase.SqlParameterChar">
            <summary>
            sql语句参数字符
            </summary>
        </member>
        <member name="P:Wisense.Common.IMainDatabase.SqlToDateString">
            <summary>
            sql 语句todate函数名
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IClientExtension">
            <summary>
            客户端扩展
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IChildActivityCategory">
            <summary>
            活动子目录
            </summary>
        </member>
        <member name="T:Wisense.Common.AuthenticationInfo">
            <summary>
            身份验证信息
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemContext">
            <summary>
            对象框架运行时上下文的对象上下文
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IFile">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflow.InstanceId">
            <summary>
            工作流实例ID
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflow.BindItemId">
            <summary>
            绑定的ITEM的ID
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflow.BindItemTypeId">
            <summary>
            绑定的ITEM的ITEM_TYPE_ID
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflow.Template">
            <summary>
            工作流模板对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISubOrganization">
            <summary>
            子组织
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISubOrganization.ParentOrganization">
            <summary>
            父组织（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISubOrganization.NextOrganization">
            <summary>
            子组织（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDirectory">
            <summary>
            目录
            </summary>
        </member>
        <member name="T:Wisense.Common.UnitofMeasureId">
            <summary>
            计量单位Id
            </summary>
        </member>
        <member name="F:Wisense.Common.UnitofMeasureId.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Wisense.Common.UnitofMeasureId.KG">
            <summary>
            公斤
            </summary>
        </member>
        <member name="F:Wisense.Common.UnitofMeasureId.KW">
            <summary>
            千瓦
            </summary>
        </member>
        <member name="F:Wisense.Common.UnitofMeasureId.KWH">
            <summary>
            千瓦时
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.EstimatedFinishTime">
            <summary>
            计划完成时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.ActualFinishTime">
            <summary>
            实际完成时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.AssignTo">
            <summary>
            待办人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.Excutor">
            <summary>
            执行人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITodoList.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IRelationshipType">
            <summary>
            对象框架"关联类型"
             @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.SourceItemType">
            <summary>
            源对象类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.RelationshipItemType">
            <summary>
            关联对象类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.Label">
            <summary>
            获取、设置显示标签
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.Description">
            <summary>
            获取、设置描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.ShowInRiccTab">
            <summary>
            获取、设置是否在关联列表显示
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.Orderly">
            <summary>
            获取、设置是否有序
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.ViewRelationshipItem">
            <summary>
            获取、设置关联列表是否显示关联对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.EditRelationshipItem">
            <summary>
            获取、设置关联列表是否编辑关联对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRelationshipType.RelatedNotNull">
            <summary>
            获取、设置是否被关联对象不能为空
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IRICC">
            <summary>
            对象框架"关联对象集合的集合"
             @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IRICC.Load">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IRICC.GetRIC(Wisense.Common.Item.IRelationshipType)">
            <summary>
            获取指定的关联对象列表。
            </summary>
            <param name="relationshipType">关联类型</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IRICC.GetRIC(System.String)">
            <summary>
            获取指定的关联对象列表。
            </summary>
            <param name="relationshipTypeName">关联类型名称</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IRICC.TryGetRIC(Wisense.Common.Item.IRelationshipType,Wisense.Common.Item.IRIC@)">
            <summary>
            尝试获取指定的关联对象列表。
            </summary>
            <param name="relationshipType">关联类型</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IRICC.TryGetRIC(System.String,Wisense.Common.Item.IRIC@)">
            <summary>
            尝试获取指定的关联对象列表。
            </summary>
            <param name="relationshipTypeName">关联类型名称</param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.IRICC.Source">
            <summary>
            源对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRICC.Loaded">
            <summary>
            是否已经加载
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.WorkHours">
            <summary>
            任务工时
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.EstimatedFinishTime">
            <summary>
            计划完成时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.CanceledOn">
            <summary>
            取消时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.CanceledBy">
            <summary>
            取消人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.Type">
            <summary>
            类型（多人任务，单人任务）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.DecisionOption">
            <summary>
            决定选项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.Label">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.Workflow">
            <summary>
            工作流
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.Name">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.ProcessView">
            <summary>
            处理界面
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.MaxTaskCount">
            <summary>
            最大产生任务数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.MaxSubmitCount">
            <summary>
            最大提交任务数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.AllowReceived">
            <summary>
            是否允许接收
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTask.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IWidget">
            <summary>
            主页部件
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWidget.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWidget.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWidget.Assembly">
            <summary>
            装配件名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWidget.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWidget.WebPartIdentity">
            <summary>
            主页部件适用的用户关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IMainMenuCustomItem">
            <summary>
            自定义主菜单项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuCustomItem.MenuItemKey">
            <summary>
            菜单键名
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Extension.AutomaticallyMergeItemEventReciever">
            <summary>
            处理自动合并对象处理事件接收器
            </summary>
        </member>
        <member name="T:Wisense.Common.SchedulingTaskId">
            <summary>
            计划任务Id
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.QueryArea">
            <summary>
             查询范围
             @author 张春红
            </summary>
            
        </member>
        <member name="T:Wisense.Common.Item.OrderByClause">
            <summary>
            对象框架，排序子句
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.OrderByClause.ToString">
            <summary>
            等同于“SqlString”属性
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.OrderByClause.SqlString">
            <summary>
            获取标准sql语句形式的排序子句（形如：XXX ASC , YYY DESC）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.OrderByClause.IsValidOrderByClause">
            <summary>
            获取是否是有效排序子句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTemplate.Template">
            <summary>
            工作流模板
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTemplate.Name">
            <summary>
            工作流模板名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWorkflowTemplate.Description">
            <summary>
            工作流模板描述
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ITouchTerminalPortalFun">
            <summary>
            触摸屏终端门户功能项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Index">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ITouchTerminalPortalFun.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPortalLayoutWebPart">
            <summary>
            门户布局部件
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalLayoutWebPart.ColumnIndex">
            <summary>
            列号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalLayoutWebPart.RowIndex">
            <summary>
            行号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalLayoutWebPart.PortalLayout">
            <summary>
            门户布局（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalLayoutWebPart.Widget">
            <summary>
            主页部件（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPermissionIdentity">
            <summary>
            对象权限用户标识
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentity.Identity">
            <summary>
            用户标识（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentity.Permission">
            <summary>
            对象权限（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionIdentity.PermissionIdentityDetail">
            <summary>
            对象权限明细关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDirectoryLibrary">
            <summary>
            目录库
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.IEnumerableExtensions">
            <summary>
            IEnumerable extensions
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.IEnumerableExtensions.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Does a function for each item in the IEnumerable, returning a list of the results
            </summary>
            <typeparam name="T">Object type</typeparam>
            <typeparam name="R">Return type</typeparam>
            <param name="List">IEnumerable to iterate over</param>
            <param name="Function">Function to do</param>
            <returns>The resulting list</returns>
        </member>
        <member name="M:Wisense.Common.Utils.IEnumerableExtensions.Joint``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            用指定字符串连接枚举集合中的所有元素
            </summary>
            <typeparam name="T">枚举集合中元素的类型</typeparam>
            <param name="list"></param>
            <param name="connection">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.IEnumerableExtensions.ToArray``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Converts a list to an array
            </summary>
            <typeparam name="Source">Source type</typeparam>
            <typeparam name="Target">Target type</typeparam>
            <param name="List">List to convert</param>
            <param name="ConvertingFunction">Function used to convert each item</param>
            <returns>The array containing the items from the list</returns>
        </member>
        <member name="T:Wisense.Common.Item.IUserGroup">
            <summary>
            用户组
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.Users">
            <summary>
            当前用户组包含的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.Children">
            <summary>
            当前用户组的子用户组
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.UsersIncludingDescendantsUsers">
            <summary>
            当前用户组及其后代用户组的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.Descendants">
            <summary>
            所有子孙后代用户组
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.Parents">
            <summary>
            当前用户组的父用户组
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroup.Ancestors">
            <summary>
            所有祖先用户组
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.UnwritableException">
            <summary>
            对象框架，不可写异常
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.DbNativeQuery">
            <summary>
            形如"select ID,ITEM_TYPE_ID ...[union select ID,ITEM_TYPE_ID...]"格式的数据库原生查询
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.DbNativeQuery.#ctor(System.String)">
            <summary>
            数据库原生查询
            </summary>
            <param name="sql">形式如"select ID,ITEM_TYPE_ID ...[union select ID,ITEM_TYPE_ID...]"格式的数据库原生查询语句</param>
        </member>
        <member name="M:Wisense.Common.Item.DbNativeQuery.AddParameter(Wisense.Common.Item.NamedSqlParameter)">
            <summary>
            添加一个命名sql参数
            </summary>
            <param name="parameter">命名sql参数</param>
            <returns>自身（this）</returns>
        </member>
        <member name="M:Wisense.Common.Item.DbNativeQuery.ToString">
            <summary>
            字符串形式的形如"select ID,ITEM_TYPE_ID ...[union select ID,ITEM_TYPE_ID...]"格式的数据库原生查询语句。
            等同于“SqlString”属性
            </summary>
            <returns>字符串形式的数据库原生查询sql语句</returns>
        </member>
        <member name="P:Wisense.Common.Item.DbNativeQuery.SqlString">
            <summary>
            获取或设置字符串形式的原生sql语句。
            形式如"select ID,ITEM_TYPE_ID ...[union select ID,ITEM_TYPE_ID...]"格式的数据库原生查询语句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.DbNativeQuery.Parameters">
            <summary>
            获取命名sql参数
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.GeneralItem">
            <summary>
            通用对象。与“对象类型”顶层实例“通用对象”对应
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.GetAttributes">
            <summary>
            获取特性集
            </summary>
            <returns>特性集</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.GetAttribute(System.String)">
            <summary>
            获取特性
            </summary>
            <param name="name">特性名称（不区分大小写）</param>
            <returns>特性值</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.IsWritableProperty(System.String)">
            <summary>
            判断指定的属性项值是否可修改。
            </summary>
            <param name="dbColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.IsModifiedProperty(System.String)">
            <summary>
            判断指定的属性项值是否发生更改。
            </summary>
            <param name="dbColumnName">数据库列名</param>
            <returns>是否发生更改</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.ContainsAttribute(System.String)">
            <summary>
            判断对象是否包含指定的特性
            </summary>
            <param name="dbColumnName">特性名称</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.GetProperty``1(System.String)">
            <summary>
            获取对象属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="columnName">数据库列名</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.GetProperty``1(System.String,Wisense.Common.Item.ItemDataVersion)">
            <summary>
            获取对象指定数据版本的属性值
            </summary>
            <typeparam name="T">与wisense数据类型对应的.net类型，包括自定义的item类(继承自BaseItem)</typeparam>
            <param name="dbColumnName">数据库列名</param>
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.SetProperty``1(System.String,``0)">
            <summary>
            设置对象属性值
            </summary>
            <typeparam name="T">与Wisense数据类型对应的.net类型，包括自定义的item类（实现IBaseItem）</typeparam>
            <param name="dbColumnName">数据库列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.IsExists">
            <summary>
            当前对象是否存在。
            对于已持久化对象，当数据库中有对应的记录时才返回true；
            对于新建对象，始终返回false
            </summary>
            <returns>是否存在</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.IsInstanceOf(Wisense.Common.Item.IItemType)">
            <summary>
            当前对象是否是指定的对象类型（含子孙后代）的实例
            </summary>
            <param name="itemType">指定的对象类型</param>
            <returns>是否是指定对象类型（含子孙后代）的实例</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.MoveTo(Wisense.Common.Item.IItemType)">
            <summary>
            将当前对象实例数据迁移到其他对象类中。当前对象删除。
            该操作仅迁移原对象类和目标对象类中共同的属性项值和关联对象（AB）实例，其余的将损失。
            </summary>
            <param name="destination">目标对象类</param>
            <returns>目的对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Replicate">
            <summary>
            浅复制一个对象副本，仅创建，未（不）保存；
            只复制当前对象本身，不级联复制其关联对象；
            此对象副本拥有与源对象的相同的属性值。
            </summary>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Replicate(Wisense.Common.Item.IItemCollection)">
            <summary>
            深复制一个对象副本，仅创建，未（不）保存；
            相当于一系列的浅复制：浅复制当前对象->浅复制当前对象的关联对象->浅复制当前对象的关联对象的关联对象->...以此递推。
            会级联浅复制该对象的关联对象，以及关联对象的关联对象,以此递推，将这些对象填充到relationshipItems集合中。
            此对象副本及其层级复制的关联对象拥有与源对象的相同的属性值。
            </summary>
            <param name="relationshipItems">事先构造好的对象容器【relationshipItems = new ItemCollection();】，用以填充级联复制创建的关联对象（级联复制的关联对象，及其关联对象的关联对象，以此递推）</param>
            <returns>对象副本</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.IsEqualTo(Wisense.Common.Item.IBaseItem)">
            <summary>
            判断与item是否等值（所有属性值相等）
            </summary>
            <param name="item">指定比较的目的对象</param>
            <returns>是否等值</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Decorate(Wisense.Common.Item.IBaseItem)">
            <summary>
            强制装饰对象。更换内部被装饰对象。
            ！！！非对象框架代码不允许调用该方法！！！
            为对象框架自动合并对象专用。
            </summary>
            <param name="decoratedItem">被装饰内部对象</param>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.TransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            使用指定的转换对象进行状态转换
            </summary>
            <param name="transition">生命周期转换对象</param>
            <returns>是否已转换</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.PretransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换前处理
            </summary>
            <param name="transition">状态转换对象</param>
            <returns>是否继续状态转换处理</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.AftertransitState(Wisense.Common.Item.ILifeCycleTransition)">
            <summary>
            【该方法由对象框架回调，不要直接调用】状态转换后处理
            </summary>
            <param name="fromState">从...状态</param>
            <param name="transition">状态转换对象</param>
            <param name="toState">到...状态</param>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Presaving">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存前处理，当调用Save时由框架触发（Save前）
            </summary>
            <returns>是否继续保存操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Aftersaved">
            <summary>
            【该方法由对象框架回调，不要直接调用】保存后处理，当调用Save时由框架触发（Save后）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.PresettingProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值前处理，当调用SetProperty时由框架触发（SetProperty前）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
            <returns>是否继续设值操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.AftersetedProperty``1(System.String,``0)">
            <summary>
            【该方法由对象框架回调，不要直接调用】设值后处理，当调用SetProperty时由框架触发（SetProperty后）
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="dbColumnName">属性列名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Predeleting">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除前处理
            </summary>
            <returns>是否继续删除操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Afterdeleted">
            <summary>
            【该方法由对象框架回调，不要直接调用】删除后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Precreating">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建前处理
            </summary>
            <returns>是否继续新建操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Aftercreated">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Preupdating">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改前处理
            </summary>
            <returns>是否继续修改操作</returns>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Afterupdated">
            <summary>
            【该方法由对象框架回调，不要直接调用】修改后处理
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Afternewed">
            <summary>
            【该方法由对象框架回调，不要直接调用】新建对象（未保存）后处理，ItemFactory.NewItem...时触发
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.GeneralItem.Afterreplicated(Wisense.Common.Item.IBaseItem)">
            <summary>
            【该方法由对象框架回调，不要直接调用】浅复制对象（创建对象副本）后处理
            </summary>
            <param name="replication">已创建的当前对象的副本</param>
        </member>
        <member name="P:Wisense.Common.Item.GeneralItem.RICC">
            <summary>
            对象的关联对象集合的集合。
            注意此集合为当前对象的固有逻辑关联对象集合的集合（不受权限和过滤条件的控制），与检索有本质区别。
            如要检索，请自行构造一个RICC。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.GeneralItem.IsDetached">
            <summary>
            对象是否分离（不在当前运行时上下文中，即对象不由当前运行时上下文中生成--由另一个上下文产生，跨上下文）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.GeneralItem.IsDeleting">
            <summary>
            对象是否正在删除
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ILifeCycleState">
            <summary>
            对象框架生命周期状态
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Source">
            <summary>
            （所属）生命周期
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.IsStartState">
            <summary>
            启动状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.SetIsReleased">
            <summary>
            设置为发布
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.SetNotLockable">
            <summary>
             设置为不可锁定
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Width">
            <summary>
            宽
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Height">
            <summary>
            高
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Entries">
            <summary>
            进入的生命周期转换
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleState.Exits">
            <summary>
            离开的生命周期转换
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISystemMessageSettings">
            <summary>
            系统短信平台设置
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMessageSettings.Name">
            <summary>
            账号名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMessageSettings.Description">
            <summary>
            账号说明
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMessageSettings.PhoneNumber">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMessageSettings.IsDefaultNumber">
            <summary>
            默认账号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMessageSettings.Core">
            <summary>
            核心
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISubUserGroup">
            <summary>
            子用户组
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISubUserGroup.ParentUserGroup">
            <summary>
            父用户组（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISubUserGroup.NextUserGroup">
            <summary>
            子用户组（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemLifeCycle">
            <summary>
            对象框架,对象生命周期
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLifeCycle.Source">
            <summary>
            对象类型（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLifeCycle.Related">
            <summary>
            生命周期（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLifeCycle.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLifeCycle.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IFilter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDatabaseConnectionConfig">
            <summary>
            外部数据源
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IAvailablePermissionItem">
            <summary>
            有效权限项
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.MiddleLayerAppSettings">
            <summary>
            系统配置，对应于*.config的appSettings配置节点
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.MiddleLayerAppSettings.BinaryDataPersistance">
            <summary>
            二进制数据存储方式:“RDB”(默认值)存储在关系数据库中；“MongoDB”存储在NoSQL中，支持大数据量，需要额外的部署
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.MiddleLayerAppSettings.MongoDBConnectionString">
            <summary>
            MongoDB连接串
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.MiddleLayerAppSettings.MongoDBName">
            <summary>
            MongoDB数据库名
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.MiddleLayerAppSettings.DeploymentType">
            <summary>
            部署模式（App/Web）
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.MiddleLayerAppSettings.RuntimeType">
            <summary>
            Wisense_FlexPP运行时类型Production/Development
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.AttributeValueType">
            <summary>
            特性值类型
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.AttributeValueType.SingleValue">
            <summary>
            单值
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.AttributeValueType.ValueSet">
            <summary>
            值集合
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.AttributeValueType.ValueRange">
            <summary>
            值范围
            </summary>
        </member>
        <member name="T:Wisense.Common.WisenseDataType">
            <summary>
            对象框架，Wisense系统数据类型
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.BOOLEAN">
            <summary>
            布尔型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.INTEGER">
            <summary>
            整型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.BIGINT">
            <summary>
            大整型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.FLOAT">
            <summary>
            单精度浮点型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.DOUBLE">
            <summary>
            双精度浮点型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.DECIMAL">
            <summary>
            数值型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.MONEY">
            <summary>
            货币型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.DATETIME">
            <summary>
            日期时间型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.DATE">
            <summary>
            日期型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.TIME">
            <summary>
            时间型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.TIMESPAN">
            <summary>
            时间段
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.STRING">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.TEXT">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.BLOB">
            <summary>
            二进制型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.ITEM">
            <summary>
            对象型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.LIST">
            <summary>
            列表型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.SEQUENCE">
            <summary>
            序列型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.CODE">
            <summary>
            编码型
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.MD5">
            <summary>
            密文串
            </summary>
        </member>
        <member name="F:Wisense.Common.WisenseDataType.FOREIGN">
            <summary>
            外部属性引用型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.StreamValueWrapper">
            <summary>
            类型为“流”的值的包装器，用于对象框架对象二进制数据表达
            包装在其中的数据不支持序列化（对象进入缓存、分布式传输），即序列化时会被忽略。
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.StreamValueWrapper.#ctor(System.Boolean,System.IO.Stream)">
            <summary>
            构造一个StreamValueWrapper
            </summary>
            <param name="loaded">加载标志</param>
            <param name="s">流</param>
        </member>
        <member name="P:Wisense.Common.Item.StreamValueWrapper.Value">
            <summary>
            获取、设置流值
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.StreamValueWrapper.Loaded">
            <summary>
            获取、设置流值是否装载
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPersonalization">
            <summary>
            个性化
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPersonalization.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPersonalization.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IOrganizationUser">
            <summary>
            组织用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganizationUser.IsMain">
            <summary>
            是否主组织
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganizationUser.Organization">
            <summary>
            组织（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganizationUser.User">
            <summary>
            用户（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Extension.AfterdeletedEventReciever">
            <summary>
            对象删除后处理
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemType">
            <summary>
            对象框架对象类型
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.IsAncestorOf(Wisense.Common.Item.IItemType)">
            <summary>
            是否是指定对象类型的祖先类型
            </summary>
            <param name="itemType">对象类型</param>
            <returns>是否是指定对象类型的祖先类型</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.IsDescendantOf(Wisense.Common.Item.IItemType)">
            <summary>
            是否是指定对象类型的子孙类型
            </summary>
            <param name="itemType">对象类型</param>
            <returns>是否是指定对象类型的子孙类型</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.GetMetadata(Wisense.Common.Item.IRelationshipType)">
            <summary>
            （通过指定元数据的关联类型）获取元数据。
            </summary>
            <param name="relationshipType">关联类型</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.TryGetPropertyMetadata(System.String)">
            <summary>
            尝试获取某个属性元数据。不存在，不抛出异常，返回null。
            </summary>
            <param name="dbColumnName">属性对应的列名</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.GetPropertyMetadata(System.String)">
            <summary>
            获取某个属性元数据。不存在，抛出异常。
            </summary>
            <param name="dbColumnName">属性对应的列名</param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.TryGetProperty(System.String)">
            <summary>
            试图获取对象类型的属性
            </summary>
            <param name="dbColumnName">属性对应的数据库列名</param>
            <returns>属性（如果存在的话），否则返回null</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.TryGetRelationshipTypeMetadata(System.String)">
            <summary>
            试图获取关联类型元数据
            </summary>
            <param name="relationshipTypeName">关联类型名称</param>
            <returns>关联类型（如果存在的话），否则返回null</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.TryGetRelationshipType(System.String)">
            <summary>
            试图获取对象类型的关联类型
            </summary>
            <param name="relationshipTypeName">关联类型名称</param>
            <returns>关联类型（如果存在的话），否则返回null</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.GetRelationshipTypeMetadata(System.String)">
            <summary>
            获取关联类型元数据
            </summary>
            <param name="relationshipTypeName">关联类型名称</param>
            <returns>关联类型（如果存在的话），否则抛异常</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemType.GetLifeCycle">
            <summary>
            获取生命周期
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.LabelPlural">
            <summary>
            复数显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.IsVersionable">
            <summary>
            存在版本
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Core">
            <summary>
            核心
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Abstract">
            <summary>
            不可创建对象实例
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.UnlockOnLogout">
            <summary>
            退出时解锁
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.DefaultPageSize">
            <summary>
            默认页大小
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.StorageStrategy">
            <summary>
            存储策略
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ClassPath">
            <summary>
             类路径
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.IsRelationship">
            <summary>
            关联类
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Sealed">
            <summary>
            不可添加子类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Parent">
            <summary>
            父类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Children">
            <summary>
            子类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Ancestors">
            <summary>
            所有祖先类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.Descendants">
            <summary>
            所有子孙后代类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.PropertyMetadata">
            <summary>
            属性元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.RelationshipTypeMetadata">
            <summary>
            关联类型元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ItemLifeCycleMetadata">
            <summary>
            生命周期元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ItemWorkflowMetadata">
            <summary>
            工作流元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ItemReportMetadata">
            <summary>
            报表元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ClientExtensionMetadata">
            <summary>
            客户端扩展元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.ServerExtensionMetadata">
            <summary>
            服务端扩展元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.PermissionMetadata">
            <summary>
            权限元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.AvailablePermissionItemMetadata">
            <summary>
            有效权限项元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.FilterMetadata">
            <summary>
            过滤器元数据
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.EntityClass">
            <summary>
            对象类型对应的C#实体类全限定名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.EntityClassType">
            <summary>
            对象类型对应的C#实体类
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.EntityClassAssembly">
            <summary>
            对象类型对应的C#实体类所在程序集名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemType.EntityClassAssemblyAssembly">
            <summary>
            对象类型对应的C#实体类所在程序集
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IProperty">
            <summary>
            对象框架"属性"
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.Label">
            <summary>
            获取显示标签
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.DataType">
            <summary>
            获取Wisense数据类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.DataTypeItem">
            <summary>
            获取Wisense数据类型对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.DbColumnName">
            <summary>
            获取数据库列名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ItemDataSource">
            <summary>
            获取对象数据源Id
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ItemDataSourceItem">
            <summary>
            获取对象数据源对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ListDataSource">
            <summary>
            获取列表数据源Id
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ListDataSourceItem">
            <summary>
            获取列表数据源对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsRequired">
            <summary>
            获取是否必须
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsCascade">
            <summary>
            获取是否级联
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IntegrityOption">
            <summary>
            获取完整性选项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IntegrityOptionItem">
            <summary>
            获取完整性选项对象
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.StoredLength">
            <summary>
            获取存储长度
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.Scale">
            <summary>
            获取、设置小数位数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.Prec">
            <summary>
            获取、设置精度
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.SourceItemType">
            <summary>
            获取源对象类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsOverriding">
            <summary>
            获取是否覆盖祖先类属性
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsOverrided">
            <summary>
            是否被子类属性覆盖
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsHidden">
            <summary>
            获取是否对象列表隐藏
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsHidden2">
            <summary>
            获取是否关联对象列表隐藏
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.IsHidden3">
            <summary>
            获取是否对象浏览器隐藏
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ForeignDataSource">
            <summary>
            外部属性数据源
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IProperty.ForeignProperty">
            <summary>
            外部属性
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IOrganization">
            <summary>
            组织
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IOrganization.CutTo(Wisense.Common.Item.IOrganization,Wisense.Common.Item.IOrganization)">
            <summary>
            剪切组织到
            </summary>
            <param name="previousParent">原父组织</param>
            <param name="currentParent">新父组织</param>
            <returns>关联对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IOrganization.DeleteSubOrganization(Wisense.Common.Item.IOrganization)">
            <summary>
            删除自己的某个子组织
            </summary>
            <param name="organization">要删除的子组织</param>
        </member>
        <member name="M:Wisense.Common.Item.IOrganization.CopyTo(Wisense.Common.Item.IOrganization)">
            <summary>
            复制组织到
            </summary>
            <param name="organization">目标组织</param>
            <returns>关联对象</returns>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.Users">
            <summary>
            当前组织包含的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.Children">
            <summary>
            当前组织的子组织
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.UsersIncludingDescendantsUsers">
            <summary>
            当前组织及其后代组织的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.Descendants">
            <summary>
            所有子孙后代组织
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.Parents">
            <summary>
             当前组织的父组织
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IOrganization.Ancestors">
            <summary>
            所有祖先组织
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISequence">
            <summary>
            序列
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.ISequence.NewSquence">
            <summary>
            新生成一个序列号
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.CurrentValue">
            <summary>
            当前值
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.PadWith">
            <summary>
            填充字符
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.PadTo">
            <summary>
            填充到的位数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISequence.Step">
            <summary>
            步骤
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ILifeCycleTransition">
            <summary>
            对象框架,生命周期转换
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.From">
            <summary>
            源状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.To">
            <summary>
            目标状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.X">
            <summary>
            X坐标
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Y">
            <summary>
            Y坐标
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycleTransition.Source">
            <summary>
            源对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDimensionsforUnitofMeasure">
            <summary>
            计量维度
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IDimensionsforUnitofMeasure.Dimension">
            <summary>
            计量单位组编号
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IDimensionsforUnitofMeasure.DimensionText">
            <summary>
            计量单位组名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IDimensionsforUnitofMeasure.SIUnit">
            <summary>
            基准计量单位
            </summary>
        </member>
        <member name="F:Wisense.Common.ListId.ITEM_BEHAVIOR">
            <summary>
            对象行为
            </summary>
        </member>
        <member name="F:Wisense.Common.ListId.LOG_TYPE">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ListId.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:Wisense.Common.ItemTypeId">
            <summary>
            对象类型Id。记录对象类型Id常量。
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.GENERAL_ITEM">
            <summary>
            对象
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.RELATIONSHIP">
            <summary>
            关联
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_TYPE">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.RELATIONSHIP_TYPE">
            <summary>
            关联类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PROPERTY">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.LIST">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.VALUE">
            <summary>
            列表值
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.USER">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.USER_GROUP">
            <summary>
            用户组
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.USER_GROUP_USER">
            <summary>
            用户组用户
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SUB_USER_GROUP">
            <summary>
            子用户组
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ORGANIZATION">
            <summary>
            组织
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ORGANIZATION_USER">
            <summary>
            组织用户
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SUB_ORGANIZATION">
            <summary>
            子组织
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.IDENTITY">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION2">
            <summary>
            对象权限
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION2_IDENTITY">
            <summary>
            对象权限用户标识
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION2_IDENTITY_DETAIL">
            <summary>
            对象权限授权明细
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION_ITEM">
            <summary>
            权限项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_LIFE_CYCLE">
            <summary>
            对象生命周期
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.LIFE_CYCLE">
            <summary>
            生命周期
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.LIFE_CYCLE_STATE">
            <summary>
            生命周期状态
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.LIFE_CYCLE_TRANSITION">
            <summary>
            生命周期转换
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.STATE_TRANSITION_HISTORY">
            <summary>
            生命周期转换历史
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.AVAILABLE_PERMISSION_ITEM">
            <summary>
            有效权限项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MAIN_MENU_ITEM_TYPE_ITEM">
            <summary>
            对象类型子菜单
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MAIN_MENU_CUSTOM_ITEM">
            <summary>
            自定义主菜单项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_MAIN_MENU_ITEM">
            <summary>
            对象主菜单项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MAIN_MENU_DIRECTORY">
            <summary>
            主菜单目录
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DIRECTORY_SUB_MAIN_MENU_ITEM">
            <summary>
            目录子菜单项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MAIN_MENU_ITEM">
            <summary>
            主菜单项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SYSTEM_MAIL_SETTINGS">
            <summary>
            系统邮箱设置
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.WFTASK_TODOLIST">
            <summary>
            工作流待办任务
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_LOG">
            <summary>
            对象日志
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SYSTEM_MESSAGE_SETTINGS">
            <summary>
            系统短信平台设置
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.CLIENT_EXTENSION_POINT">
            <summary>
             表示层扩展点
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.EVENT_LISTENER">
            <summary>
            事件监听器
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.VIEW_STYLE">
            <summary>
             视图样式
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.VIEW_MODEL">
            <summary>
             视图模型
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.CLIENT_EXTENSION">
            <summary>
            客户端扩展
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SERVER_EXTENSION">
            <summary>
            服务端扩展
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DIRECTORY_LIBRARY">
            <summary>
            目录库
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_PROPERTY_DIRECTORY_LIBRATY">
            <summary>
            可选择的目录库
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ANY_AVAILABLE_ITEM_TYPE">
            <summary>
            可用的对象类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION">
            <summary>
             类型权限
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERMISSION_DETAIL">
            <summary>
            类型权限明细
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_WORKFLOW">
            <summary>
            对象工作流
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.REVISION">
            <summary>
            版本序列
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ICON_LIBRARY">
            <summary>
            图标库
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ICONLIB_FILES">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DIRECTORY">
            <summary>
            目录
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DIRECTORY_FILES">
            <summary>
            目录关联文件
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DIRECTORY_STRUCTURE">
            <summary>
            目录结构关系
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.FILE_TYPE">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.FILESUFFIX">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_INTRODUCTION_TYPE_DEFINE">
            <summary>
            对象引入类型定义
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ACTIVITY">
            <summary>
            活动
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.IMAGE_AND_ICON">
            <summary>
            图片(图标)
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ACTIVITY_CATEGORY">
            <summary>
            活动目录
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.CHILD_ACTIVITY_CATEGORY">
            <summary>
            活动子目录
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.FILTER">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DATASHOWTEMPLATE">
            <summary>
            电子看板
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.FUNCTION_NAME">
            <summary>
            展示功能名称
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SYS_OPTION">
            <summary>
            系统选项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MONITOR_TEMPLATES">
            <summary>
             监控展示模板
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DB_UPGRADE_SCRIPT_LOG">
            <summary>
            数据库升级脚本运行记录
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DATABASE_CONNECTION_CONFIG">
            <summary>
            外部数据源
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.TOUCH_TERMINAL_PORTAL_FUN">
            <summary>
            触摸屏终端门户功能项
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.UI_STYLE">
            <summary>
            界面风格
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SEQUENCE">
            <summary>
            序列
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERSONALIZATION">
            <summary>
            个性化
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PORTAL_LAYOUT">
            <summary>
            门户布局
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.WIDGET">
            <summary>
            主页部件
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.WEB_PART_IDENTITY">
            <summary>
            主页部件适用的用户
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PORTAL_LAYOUT_WEB_PART">
            <summary>
            门户布局部件
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PORTAL">
            <summary>
            门户自定义
            </summary>
        </member>
        <!-- 对于成员“F:Wisense.Common.ItemTypeId.PORTAL_IDENTITY”忽略有格式错误的 XML 注释 -->
        <member name="F:Wisense.Common.ItemTypeId.IDENTITY_PERSONALIZATION">
            <summary>
            用户标识个性化
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SERVER_EXTENSION_POINT">
            <summary>
            服务层扩展点
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.LOGIN_MODE_CONFIG">
            <summary>
            登录方式配置
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_LIST_PERSONALIZATION">
            <summary>
            对象列表显示个性化
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_LIST_PZATION_PROPERTY">
            <summary>
            对象列表显示个性化属性
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.NOTICE">
            <summary>
            公告
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PERSONALIZATION_FILTER">
            <summary>
            个性化过滤
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ITEM_LIST_PZATION_FILTER">
            <summary>
            对象列表显示个性化过滤
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SINGLE_VIEW">
            <summary>
            单对象视图
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.SINGLE_VIEW_CONTENT">
            <summary>
            单对象视图内容
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.VISUAL_ELEMENTS">
            <summary>
            可视化元素
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PROPERTY_ELEMENT">
            <summary>
            属性元素
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PROPERTY_GROUP">
            <summary>
            属性组
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.PROPERTY_GROUP_CONTENT">
            <summary>
            属性组内容
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MULT_VIEW">
            <summary>
            多对象视图
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.MULT_VIEW_CONTENT">
            <summary>
            多对象视图内容
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.UnitofMeasure">
            <summary>
            计量单位
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.DimensionsforUnitofMeasure">
            <summary>
            计量维度
            </summary>
        </member>
        <member name="F:Wisense.Common.ItemTypeId.ATTRIBUTE">
            <summary>
            特性
            </summary>
        </member>
        <member name="T:Wisense.Common.IntegrityOption">
            <summary>
            完整性选项
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.IntegrityOption.SET_NULL">
            <summary>
            设为空
            </summary>
        </member>
        <member name="F:Wisense.Common.IntegrityOption.DENY_DELETE">
            <summary>
            拒绝删除
            </summary>
        </member>
        <member name="F:Wisense.Common.IntegrityOption.DELETE_CURRENT_ITEM">
            <summary>
            删除当前
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISchedulingTask">
            <summary>
            计划任务
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.ISchedulingTask.Next">
            <summary>
            下一次执行时间。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.BaseTime">
            <summary>
            执行基准时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Name">
            <summary>
            计划任务名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Enable">
            <summary>
            计划是否启用
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Mode">
            <summary>
            计划模式
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.PerMinute">
            <summary>
            每几分钟
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.PerHour">
            <summary>
            每几小时
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.PerDay">
            <summary>
            每几天
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Week">
            <summary>
            星期
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Day">
            <summary>
            第几天
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.SpecificTime">
            <summary>
            指定时间
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Position">
            <summary>
            部署位置
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISchedulingTask.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IEventListener">
            <summary>
            事件监听器
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IClientExtensionPoint">
            <summary>
            表示层扩展点
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IActivityCategory">
            <summary>
            活动目录
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.AppUtil.DoEvents">
            <summary>
            Processes all UI messages currently in the message queue.
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.SUB_USER_GROUP">
            <summary>
            子用户组
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.USER_GROUP_USER">
            <summary>
            用户组用户
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ORGANIZATION_USER">
            <summary>
            组织用户
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.SUB_ORGANIZATION">
            <summary>
            子组织
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PERMISSION2_IDENTITY">
            <summary>
            对象权限用户标识
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PERMISSION2_IDENTITY_DETAIL">
            <summary>
            对象权限明细
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PERMISSION">
            <summary>
            类型权限
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.AVAILABLE_PERMISSION_ITEM">
            <summary>
            有效权限项
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PERMISSION_DETAIL">
            <summary>
            类型权限明细
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ITEM_WORKFLOW">
            <summary>
            对象工作流
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.CLIENT_EXTENSION">
            <summary>
            客户端扩展
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.SERVER_EXTENSION">
            <summary>
            服务端扩展
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ITEM_PROPERTY_DIRECTORY_LIBRARY">
            <summary>
            可选择的目录库
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ANY_AVAILABLE_ITEM_TYPE">
            <summary>
            可用的对象类型
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.LIFE_CYCLE_STATE">
            <summary>
            生命周期状态
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.LIFE_CYCLE_TRANSITION">
            <summary>
            生命周期跃迁
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ICONLIB_FILES">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.DIRECTORY_FILES">
            <summary>
            目录关联文件
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.DIRECTORY_STRUCTURE">
            <summary>
            目录结构关系
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.FILESUFFIX">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ITEM_INTRODUCTION_TYPE_DEFINE">
            <summary>
            对象引入类型定义
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ACTIVITY">
            <summary>
            活动
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.CHILD_ACTIVITY_CATEGORY">
            <summary>
            活动子目录
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.DIRECTORY_SUB_MAIN_MENU_ITEM">
            <summary>
            目录子菜单项
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.FILTER">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.FUNCTION_NAME">
            <summary>
            展示功能名称
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.WEB_PART_IDENTITY">
            <summary>
            主页部件适用的用户
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PORTAL_LAYOUT_WEB_PART">
            <summary>
            门户布局部件
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PORTAL_IDENTITY">
            <summary>
            门户自定义适用的用户
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.IDENTITY_PERSONALIZATION">
            <summary>
            用户标识个性化
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ITEM_LIST_PZATION_PROPERTY">
            <summary>
            对象列表显示个性化属性
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ITEM_LIST_PZATION_FILTER">
            <summary>
            对象列表显示个性化过滤
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.MULT_VIEW">
            <summary>
            多对象视图
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.MULT_VIEW_CONTENT">
            <summary>
            多对象视图内容
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.PROPERTY_GROUP_CONTENT">
            <summary>
            属性组内容
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.SINGLE_VIEW">
            <summary>
            单对象视图
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.SINGLE_VIEW_CONTENT">
            <summary>
            单对象视图内容
            </summary>
        </member>
        <member name="F:Wisense.Common.RelationshipTypeId.ATTRIBUTE">
            <summary>
            对象特性
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWFTaskTodoList.Decision">
            <summary>
            决定
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWFTaskTodoList.DecisionDescription">
            <summary>
            决定说明
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWFTaskTodoList.AdditionalParam">
            <summary>
            附加参数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWFTaskTodoList.ReceivedBy">
            <summary>
            接受人
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWFTaskTodoList.ReceivedOn">
            <summary>
            接受时间
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.InnerItem">
            <summary>
            对象框架内部对象
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IViewStyle">
            <summary>
            视图样式
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IRevision">
            <summary>
            可用的对象类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRevision.revision">
            <summary>
            版本序列
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemLog">
            <summary>
            对象日志
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.ItemID">
            <summary>
            对象ID
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.ItemTypeID">
            <summary>
            对象类型ID
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.Action">
            <summary>
            操作
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.Content">
            <summary>
            操作内容
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.ActionLoginname">
            <summary>
            操作者登录名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.ActionName">
            <summary>
            操作者名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemLog.ActedOn">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDirectorySubMainMenuItem">
            <summary>
            目录子菜单项
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Extension.PredeletingEventReciever">
            <summary>
            对象删除前处理
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.SetProperties">
            <summary>
            用于构建属性值的回调
            </summary>
            <param name="Property"></param>
        </member>
        <member name="T:Wisense.Common.Utils.JsonPropertyType">
            <summary>
            JsonObject属性值类型
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.JsonObject">
            <summary>
            JSON通用对象
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.Parse(System.String@)">
            <summary>
            Json字符串解析
            </summary>
            <param name="jsonString"></param>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.Properties``1(System.String)">
            <summary>
            通过此泛型函数可直接获取指定类型属性的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.GetPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.RemoveProperty(System.String)">
            <summary>
            移除一个属性
            </summary>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.IsNull">
            <summary>
            是否为空对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonObject.ToString(System.String)">
            <summary>
            ToString...
            </summary>
            <param name="format">格式化字符串</param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Utils.JsonObject.Item(System.String)">
            <summary>
            获取属性
            </summary>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Wisense.Common.Utils.JsonProperty">
            <summary>
            JSON对象属性
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.JsonProperty.Parse(System.String@)">
            <summary>
            Json字符串解析
            </summary>
            <param name="jsonString"></param>
        </member>
        <member name="M:Wisense.Common.Utils.JsonProperty.ParseArray(System.String@)">
            <summary>
            Json Array解析
            </summary>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonProperty.ParseString(System.String@)">
            <summary>
            Json String解析
            </summary>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Utils.JsonProperty.ParseObject(System.String@)">
            <summary>
            Json Object解析
            </summary>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Item(System.Int32)">
            <summary>
            定义一个索引器，如果属性是非数组的，返回本身
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Item(System.String)">
            <summary>
            提供一个字符串索引，简化对Object属性的访问
            </summary>
            <param name="PropertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Object">
            <summary>
            JsonObject值
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Value">
            <summary>
            字符串值
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Items">
            <summary>
            Array值，如果属性是非数组的，则封装成只有一个元素的数组
            </summary>
        </member>
        <member name="P:Wisense.Common.Utils.JsonProperty.Number">
            <summary>
            数值
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.PermissionItemRef">
            <summary>
            权限对象引用
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ItemRef">
            <summary>
            对象框架，对象引用
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.ItemRef.Equals(Wisense.Common.Item.ItemRef)">
            <summary>
            判断是否相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.ItemRef.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ItemRef.ItemTypeId">
            <summary>
            ItemTypeId
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ItemRef.Key">
            <summary>
            键：Id+ItemTypeId
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.PermissionItemRef.#ctor(System.String,System.String)">
            <summary>
            权限项对象引用
            </summary>
            <param name="id">权限项Id</param>
            <param name="name">权限项名称</param>
        </member>
        <member name="P:Wisense.Common.Item.PermissionItemRef.Name">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.PermissionItemRef.Key">
            <summary>
            权限项对象KEY，即ID
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.QueryMode">
            <summary>
            查询模式
             @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ItemState">
            <summary>
            对象框架，对象数据状态
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.Unload">
            <summary>
            未加载
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.Original">
            <summary>
            原始
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.Modified">
            <summary>
            已修改
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.NewUnload">
            <summary>
            新建未加载
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.New">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.NewModified">
            <summary>
            新建并修改
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.Deleted">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemState.Invalid">
            <summary>
            失效
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IRIC">
            <summary>
            对象框架"关联对象集合"
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemCollectionByItemType">
            <summary>
            对象框架对象类型对象集合
            @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemCollection">
            <summary>
            对象框架通用对象集合
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.GetItemRefs">
            <summary>
            获取集合中对象的对象引用列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.Load">
            <summary>
            数据加载
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.Reset">
            <summary>
            重置对象集合（清楚集合的元素，并设为未加载状态，对集合的构成因素无影响）。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.Reload">
            <summary>
            重新加载（当集合的构成因素发生改变后）
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.ResetAll">
            <summary>
            批量复位对象集合中所有的对象（丢弃对象最后一次Original状态以来所有的更改）。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.DeleteAll">
            <summary>
            批量删除集合中所有的对象(将对象置为Deleted状态）。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.SaveAll">
            <summary>
            批量保存对象集合中的对象，没有发生持久化更改的对象无任何操作。
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.FirstPage">
            <summary>
            分页集合定位至第一页
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.ForwardPage">
            <summary>
            分页集合向前翻页
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.NextPage">
            <summary>
            分页集合向后翻页
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.LastPage">
            <summary>
            分页集合定位至最后一页
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.GotoPage(System.Int32)">
            <summary>
            分页集合定位至指定页
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemCollection.BatchLoadItemPropertyItems(Wisense.Common.Item.IProperty)">
            <summary>
            批量加载集合元素（对象）的对象型属性的对象。
            将以单个方式加载对象，改良为批量加载对象。
            此方法对客户端列表展示对象集合时，展示对象型属性的列的性能具有很大的提升作用。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.Pagination">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.IsPagination">
            <summary>
            是否为分页集合
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.ItemsBatchLoading">
            <summary>
            是否批量加载集合中的对象。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.IsIdentityControl">
            <summary>
            是否使用用户标识控制（权限等）。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.DbNativeQuery">
            <summary>
            数据原生查询
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollection.Loaded">
            <summary>
            集合是否加载
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.ItemType">
            <summary>
            获取对象类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.WhereClause">
            <summary>
            获取Where子句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.OrderByClause">
            <summary>
            获取排序子句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.IncludingSubItemTypeInstance">
            <summary>
            获取、设置是否包含子类实例
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.WithWhereClause">
            <summary>
            获取是否有where子句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemCollectionByItemType.WithOrderByClause">
            <summary>
            获取是否有排序子句
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRIC.RelationshipType">
            <summary>
            关联类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IRIC.Source">
            <summary>
            源对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IWebPartIdentity">
            <summary>
            主页部件使用的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWebPartIdentity.Widget">
            <summary>
            主页部件（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IWebPartIdentity.Identity">
            <summary>
            用户标识（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IServerExtension">
            <summary>
            服务端扩展
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IServerExtension.Assembly">
            <summary>
            程序集
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IServerExtension.ClassName">
            <summary>
            类(带命名空间，区分大小写）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IServerExtension.ExtensionPoint">
            <summary>
            扩展点
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPortalLayout">
            <summary>
            门户布局
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalLayout.PortalLayoutWebPart">
            <summary>
            门户布局面板关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IMonitorTemplates">
            <summary>
            监控展示模板
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMonitorTemplates.name">
            <summary>
            模板名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMonitorTemplates.description">
            <summary>
            模板描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMonitorTemplates.AssemblyName">
            <summary>
            组件名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMonitorTemplates.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ILifeCycle">
            <summary>
            生命周期
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.LifeCycleState">
            <summary>
            生命周期状态关联集合
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.LifeCycleTransition">
            <summary>
            生命周期跃迁关联集合
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.Label">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ILifeCycle.StartState">
            <summary>
            开始状态
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IIdentityPersonalization">
            <summary>
            用户标识个性化
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIdentityPersonalization.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIdentityPersonalization.Identity">
            <summary>
            用户标识（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIdentityPersonalization.Personalization">
            <summary>
            个性化（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IFunctionName">
            <summary>
            展示功能名称
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDirectoryStructure">
            <summary>
            目录结构关系
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IActivity">
            <summary>
            活动
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.NamedSqlParameter">
            <summary>
            命名sql参数。用于对象集合where子句，原生sql查询（DbNativeQuery）语句
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.NamedSqlParameter.#ctor(System.String,System.String,System.Object)">
            <summary>
            命名sql参数构造方法
            </summary>
            <param name="name">参数名称</param>
            <param name="wisenseDataType">wisense数据类型，取值为Wisense.Common.WisenseDataType定义的字符串常量</param>
            <param name="value">参数值</param>
        </member>
        <member name="P:Wisense.Common.Item.NamedSqlParameter.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.NamedSqlParameter.Name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.NamedSqlParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.NamedSqlParameter.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemFactory">
            <summary>
            对象框架对象工厂
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.GetNewId">
            <summary>
            获取一个新Id，大写32位无分隔符GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.GetCurrentTime">
            <summary>
            获取当前中间层时间
            </summary>
            <returns>当前中间层时间</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.GetItem(System.String,System.String)">
            <summary>
            获取对象
            </summary>
            <param name="id">对象Id</param>
            <param name="itemTypeId">对象类型Id</param>
            <returns>对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.NewItem(System.String)">
            <summary>
            新建对象
            </summary>
            <param name="itemTypeId">对象类型Id</param>
            <returns>对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.NewItem``1(System.String)">
            <summary>
            新建对象
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="itemTypeId">对象类型Id</param>
            <returns>对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.NewItem(System.String,System.String)">
            <summary>
            指定对象Id方式新建对象
            </summary>
            <param name="newId">对象Id</param>
            <param name="itemTypeId">对象类型Id</param>
            <returns>对象</returns>
        </member>
        <member name="M:Wisense.Common.Item.IItemFactory.NewItem``1(System.String,System.String)">
            <summary>
            指定对象Id方式新建对象
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="newId">对象Id</param>
            <param name="itemTypeId">对象类型Id</param>
            <returns>对象</returns>
        </member>
        <member name="T:Wisense.Common.IRuntimeContext">
            <summary>
            对象框架运行时上下文
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.IRuntimeContext.Accept">
            <summary>
            接受
            </summary>
        </member>
        <member name="M:Wisense.Common.IRuntimeContext.Discard">
            <summary>
            丢弃
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDbUpgradeScriptLog">
            <summary>
            数据库升级脚本运行记录
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.ReflectionExtensions">
            <summary>
            Reflection oriented extensions
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.CallMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            Calls a method on an object
            </summary>
            <param name="MethodName">Method name</param>
            <param name="Object">Object to call the method on</param>
            <param name="InputVariables">(Optional)input variables for the method</param>
            <typeparam name="ReturnType">Return type expected</typeparam>
            <returns>The returned value of the method</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            Creates an instance of the type and casts it to the specified type
            </summary>
            <typeparam name="ClassType">Class type to return</typeparam>
            <param name="Type">Type to create an instance of</param>
            <param name="args">Arguments sent into the constructor</param>
            <returns>The newly created instance of the type</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.CreateInstance(System.Type,System.Object[])">
            <summary>
            Creates an instance of the type
            </summary>
            <param name="Type">Type to create an instance of</param>
            <param name="args">Arguments sent into the constructor</param>
            <returns>The newly created instance of the type</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.DumpProperties(System.Object,System.Boolean)">
            <summary>
            Dumps the property names and current values from an object
            </summary>
            <param name="Object">Object to dunp</param>
            <param name="HTMLOutput">Determines if the output should be HTML or not</param>
            <returns>An HTML formatted table containing the information about the object</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.DumpProperties(System.Type,System.Boolean)">
            <summary>
            Dumps the properties names and current values
            from an object type (used for static classes)
            </summary>
            <param name="ObjectType">Object type to dunp</param>
            <returns>An HTML formatted table containing the information about the object type</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetName(System.Type)">
            <summary>
            Returns the type's name (Actual C# name, not the funky version from
            the Name property)
            </summary>
            <param name="ObjectType">Type to get the name of</param>
            <returns>string name of the type</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetObjects``1(System.Reflection.Assembly)">
            <summary>
            Returns an instance of all classes that it finds within an assembly
            that are of the specified base type/interface.
            </summary>
            <typeparam name="ClassType">Base type/interface searching for</typeparam>
            <param name="Assembly">Assembly to search within</param>
            <returns>A list of objects that are of the type specified</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetObjects``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Returns an instance of all classes that it finds within a group of assemblies
            that are of the specified base type/interface.
            </summary>
            <typeparam name="ClassType">Base type/interface searching for</typeparam>
            <param name="Assemblies">Assemblies to search within</param>
            <returns>A list of objects that are of the type specified</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetObjects``1(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Returns an instance of all classes that it finds within a directory
            that are of the specified base type/interface.
            </summary>
            <typeparam name="ClassType">Base type/interface searching for</typeparam>
            <param name="Directory">Directory to search within</param>
            <returns>A list of objects that are of the type specified</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetProperty(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Gets the value of property
            </summary>
            <param name="Object">The object to get the property of</param>
            <param name="Property">The property to get</param>
            <returns>Returns the property's value</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetProperty(System.Object,System.String)">
            <summary>
            Gets the value of property
            </summary>
            <param name="Object">The object to get the property of</param>
            <param name="Property">The property to get</param>
            <returns>Returns the property's value</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyGetter``2(System.Reflection.PropertyInfo)">
            <summary>
            Gets a lambda expression that calls a specific property's getter function
            </summary>
            <typeparam name="ClassType">Class type</typeparam>
            <typeparam name="DataType">Data type expecting</typeparam>
            <param name="Property">Property</param>
            <returns>A lambda expression that calls a specific property's getter function</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyGetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Gets a lambda expression that calls a specific property's getter function
            </summary>
            <typeparam name="ClassType">Class type</typeparam>
            <param name="Property">Property</param>
            <returns>A lambda expression that calls a specific property's getter function</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets a property name
            </summary>
            <typeparam name="ClassType">Class type</typeparam>
            <typeparam name="DataType">Data type of the property</typeparam>
            <param name="Expression">LINQ expression</param>
            <returns>The name of the property</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyName(System.Linq.Expressions.Expression)">
            <summary>
            Gets a property name
            </summary>
            <param name="Expression">LINQ expression</param>
            <returns>The name of the property</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyType(System.Object,System.String)">
            <summary>
            Gets a property's type
            </summary>
            <param name="Object">object who contains the property</param>
            <param name="PropertyPath">Path of the property (ex: Prop1.Prop2.Prop3 would be
            the Prop1 of the source object, which then has a Prop2 on it, which in turn
            has a Prop3 on it.)</param>
            <returns>The type of the property specified or null if it can not be reached.</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertyType(System.Type,System.String)">
            <summary>
            Gets a property's type
            </summary>
            <param name="ObjectType">Object type</param>
            <param name="PropertyPath">Path of the property (ex: Prop1.Prop2.Prop3 would be
            the Prop1 of the source object, which then has a Prop2 on it, which in turn
            has a Prop3 on it.)</param>
            <returns>The type of the property specified or null if it can not be reached.</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertySetter``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets a lambda expression that calls a specific property's setter function
            </summary>
            <typeparam name="ClassType">Class type</typeparam>
            <typeparam name="DataType">Data type expecting</typeparam>
            <param name="PropertyName">Property name</param>
            <returns>A lambda expression that calls a specific property's setter function</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetPropertySetter``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Gets a lambda expression that calls a specific property's setter function
            </summary>
            <typeparam name="ClassType">Class type</typeparam>
            <param name="Property">Property</param>
            <returns>A lambda expression that calls a specific property's setter function</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetTypes``1(System.Reflection.Assembly)">
            <summary>
            Gets a list of types based on an interface
            </summary>
            <param name="Assembly">Assembly to check</param>
            <typeparam name="BaseType">Class type to search for</typeparam>
            <returns>List of types that use the interface</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetTypes(System.Reflection.Assembly,System.Type)">
            <summary>
            Gets a list of types based on an interface
            </summary>
            <param name="Assembly">Assembly to check</param>
            <param name="BaseType">Base type to look for</param>
            <returns>List of types that use the interface</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetTypes``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Gets a list of types based on an interface
            </summary>
            <param name="Assemblies">Assemblies to check</param>
            <typeparam name="BaseType">Class type to search for</typeparam>
            <returns>List of types that use the interface</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetTypes(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)">
            <summary>
            Gets a list of types based on an interface
            </summary>
            <param name="Assemblies">Assemblies to check</param>
            <param name="BaseType">Base type to look for</param>
            <returns>List of types that use the interface</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.IsIEnumerable(System.Type)">
            <summary>
            Simple function to determine if an item is an IEnumerable
            </summary>
            <param name="ObjectType">Object type</param>
            <returns>True if it is, false otherwise</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.IsOfType(System.Object,System.Type)">
            <summary>
            Determines if an object is of a specific type
            </summary>
            <param name="Object">Object</param>
            <param name="Type">Type</param>
            <returns>True if it is, false otherwise</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.IsOfType(System.Type,System.Type)">
            <summary>
            Determines if an object is of a specific type
            </summary>
            <param name="ObjectType">Object type</param>
            <param name="Type">Type</param>
            <returns>True if it is, false otherwise</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.Load(System.Reflection.AssemblyName)">
            <summary>
            Loads an assembly by its name
            </summary>
            <param name="Name">Name of the assembly to return</param>
            <returns>The assembly specified if it exists</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.LoadAssemblies(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Loads assemblies within a directory and returns them in an array.
            </summary>
            <param name="Directory">The directory to search in</param>
            <param name="Recursive">Determines whether to search recursively or not</param>
            <returns>Array of assemblies in the directory</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Gets the attribute from the item
            </summary>
            <typeparam name="T">Attribute type</typeparam>
            <param name="Provider">Attribute provider</param>
            <param name="Inherit">When true, it looks up the heirarchy chain for the inherited custom attributes</param>
            <returns>Attribute specified if it exists</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Gets the attributes from the item
            </summary>
            <typeparam name="T">Attribute type</typeparam>
            <param name="Provider">Attribute provider</param>
            <param name="Inherit">When true, it looks up the heirarchy chain for the inherited custom attributes</param>
            <returns>Array of attributes</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.MarkedWith``1(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Goes through a list of types and determines if they're marked with a specific attribute
            </summary>
            <typeparam name="T">Attribute type</typeparam>
            <param name="Types">Types to check</param>
            <param name="Inherit">When true, it looks up the heirarchy chain for the inherited custom attributes</param>
            <returns>The list of types that are marked with an attribute</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.MakeShallowCopy``1(``0,System.Boolean)">
            <summary>
            Makes a shallow copy of the object
            </summary>
            <param name="Object">Object to copy</param>
            <param name="SimpleTypesOnly">If true, it only copies simple types (no classes, only items like int, string, etc.), false copies everything.</param>
            <returns>A copy of the object</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.ToLongVersionString(System.Reflection.Assembly)">
            <summary>
            Gets the long version of the version information
            </summary>
            <param name="Assembly">Assembly to get version information from</param>
            <returns>The long version of the version information</returns>
        </member>
        <member name="M:Wisense.Common.Utils.ReflectionExtensions.ToShortVersionString(System.Reflection.Assembly)">
            <summary>
            Gets the short version of the version information
            </summary>
            <param name="Assembly">Assembly to get version information from</param>
            <returns>The short version of the version information</returns>
        </member>
        <member name="T:Wisense.Common.Item.OrderByCell">
            <summary>
            对象框架，排序单元
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.OrderByCell.#ctor(System.String)">
            <summary>
            【废弃】构造一个排序单元（默认升序）
            </summary>
            <param name="columnName">数据库列名</param>
        </member>
        <member name="M:Wisense.Common.Item.OrderByCell.#ctor(System.String,System.String)">
            <summary>
            构造一个排序单元（默认升序）
            </summary>
            <param name="columnName">数据库列名</param>
            <param name="wisenseDataType">数据类型</param>
        </member>
        <member name="M:Wisense.Common.Item.OrderByCell.#ctor(System.String,Wisense.Common.Item.Order)">
            <summary>
            【废弃】构造一个排序单元
            </summary>
            <param name="columnName">数据库列名</param>
            <param name="order">排序方式</param>
        </member>
        <member name="M:Wisense.Common.Item.OrderByCell.#ctor(System.String,System.String,Wisense.Common.Item.Order)">
            <summary>
            构造一个排序单元
            </summary>
            <param name="columnName">数据库列名</param>
            <param name="wisenseDataType">数据类型</param>
            <param name="order">排序方式</param>
        </member>
        <member name="M:Wisense.Common.Item.OrderByCell.ToString">
            <summary>
            等同于“SqlString”属性
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.OrderByCell.ColumnName">
            <summary>
            获取、设置数据库列名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.OrderByCell.WisenseDataType">
            <summary>
            获取设置数据类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.OrderByCell.Order">
            <summary>
            获取、设置排序方式
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.OrderByCell.SqlString">
            <summary>
            获取标准sql语句形式的排序单元（形如：XXX ASC）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.InnerItemCollection">
            <summary>
            对象框架内部对象集合
             @author 张春红
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IUserGroupUser">
            <summary>
            用户组用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroupUser.UserGroup">
            <summary>
            用户组（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUserGroupUser.User">
            <summary>
            用户（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemPermission">
            <summary>
            类型权限
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemPermission.Identity">
            <summary>
            用户标识（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemPermission.ItemType">
            <summary>
            对象类型（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemPermission.PermissionDetail">
            <summary>
            类型权限明细关联集合
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDataShowTemplate">
            <summary>
            电子看板
            </summary>
        </member>
        <member name="T:Wisense.Common.DataBaseType">
            <summary>
            数据库类型
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.DataBaseType.MsSqlServer">
            <summary>
            sql server
            </summary>
        </member>
        <member name="F:Wisense.Common.DataBaseType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IStateTransitionHistory">
            <summary>
            对象框架,生命周期状态转换历史
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IStateTransitionHistory.From">
            <summary>
            源状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IStateTransitionHistory.Transition">
            <summary>
            转换
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IStateTransitionHistory.To">
            <summary>
            目标状态
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IStateTransitionHistory.Source">
            <summary>
            源对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.SharedItem">
            <summary>
            共享对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Cell">
            <summary>
            对象值元素，用于存储对象属性值
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.Cell.GetValue``1">
            <summary>
            获取指定当前对象数据版本的数据值
            </summary>
            <typeparam name="T">类型形参</typeparam>
            <returns>值</returns>
        </member>
        <member name="M:Wisense.Common.Item.Cell.GetValue``1(Wisense.Common.Item.ItemDataVersion)">
            <summary>
            获取指定对象数据版本的数据值
            </summary>
            <typeparam name="T">类型形参</typeparam>
            <param name="version">对象数据版本</param>
            <returns>值</returns>
        </member>
        <member name="M:Wisense.Common.Item.Cell.Accept">
            <summary>
            接受更改
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.Cell.Property">
            <summary>
            设置属性单元的原数据（属性）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IViewModel">
            <summary>
            视图模型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IUIStyle">
            <summary>
            界面风格
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUIStyle.MainPageUIStyle">
            <summary>
            主界面动态效果
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUIStyle.InstancePageUIStyle">
            <summary>
            对象界面动态效果
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUIStyle.Core">
            <summary>
            核心
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPortal">
            <summary>
            门户自定义
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortal.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortal.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortal.Assembly">
            <summary>
            程序集
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortal.SystemShowLabel">
            <summary>
            系统显示名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortal.PortalIdentity">
            <summary>
            门户自定义适用的用户
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IDirectoryFiles">
            <summary>
            目录关联文件
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Extension.AftersetpropertyEventReciver">
            <summary>
            对象设置属性值后处理事件接收器
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IValue">
            <summary>
            对象框架“值”
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IValue.Label">
            <summary>
            显示标签
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IValue.Value_">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.Order">
            <summary>
            对象框架，排序方式
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.Order.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.Order.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPermissionItem">
            <summary>
            权限项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionItem.Label">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionItem.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPermissionDetail">
            <summary>
            类型权限明细
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionDetail.Allow">
            <summary>
            允许
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionDetail.Deny">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionDetail.PermissionItem">
            <summary>
            权限项（被关联对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPermissionDetail.ItemPermission">
            <summary>
            类型权限（源对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemPropertyDirectoryLibrary">
            <summary>
            可选择的目录库
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemPropertyDirectoryLibrary.Property">
            <summary>
            属性（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemPropertyDirectoryLibrary.DirectoryLibrary">
            <summary>
            目录库（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IFileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IAnyAvailableItemType">
            <summary>
            可用的对象类型
            </summary>
        </member>
        <member name="T:Wisense.Common.ComputingNode">
            <summary>
            抽象分布式运算节点类。
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.Current">
            <summary>
            获取当前运行时节点
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.CurrentUser">
            <summary>
            获取当前用户
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.ItemFactory">
            <summary>
            获取当前对象工厂
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.MainDatabase">
            <summary>
            获取当前主数据库
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.BinaryDirectory">
            <summary>
            获取或设置（允许设置一次）当前程序的二进制绝对目录
            </summary>
        </member>
        <member name="P:Wisense.Common.ComputingNode.FppDataDirectory">
            <summary>
            获取或设置（允许设置一次）当前程序的FppData绝对目录
            </summary>
        </member>
        <member name="T:Wisense.Common.Utils.EqualityComparer`1">
            <summary>
            作为适配器，将此类的实例作为Distinct（）方法的参数, 从每次都要继承IEqualityComparer的实例，改为每次写对应的委托
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Wisense.Common.Item.Pagination">
            <summary>
            对象集合分页器
            @author 张春红
            </summary>
        </member>
        <!-- 对于成员“F:Wisense.Common.Item.Pagination.pageIndex”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:Wisense.Common.Item.Pagination.pageSize”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Wisense.Common.Item.Pagination.#ctor(System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Wisense.Common.Item.Pagination.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="P:Wisense.Common.Item.Pagination.PageIndex">
            <summary>
            获取、设置页号;
            小于等于0时不分页。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.Pagination.PageSize">
            <summary>
            获取、设置页大小
            页大小（行数）。小于等于0时采用默认页大小（对数据库原生查询无效）。
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.Pagination.PageCount">
            <summary>
            获取、设置页数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.Pagination.RowCount">
            <summary>
            获取、设置对象个数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.Pagination.IsPagination">
            <summary>
            获取是否分页
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ItemWithPermissionItemsRef">
            <summary>
            对象及其权限对象引用
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.ItemWithPermissionItemsRef.#ctor(System.String,System.String)">
            <summary>
            对象及其对当前用户允许的权限项对象
            </summary>
            <param name="id"></param>
            <param name="itemTypeId"></param>
        </member>
        <member name="P:Wisense.Common.Item.ItemWithPermissionItemsRef.AllowedPermissionItems">
            <summary>
            允许的权限项对象
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IList">
            <summary>
            对象框架列表
            @author 张春红
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IList.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISystemMailSettings">
            <summary>
            系统邮箱设置
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.Name">
            <summary>
            邮箱名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.Description">
            <summary>
            邮箱说明
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.Host">
            <summary>
            主机名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.IsDefaultEmail">
            <summary>
            默认邮箱
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemMailSettings.Core">
            <summary>
            核心
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISystemLog">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemLog.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemLog.Abstract">
            <summary>
            摘要
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISystemLog.Detail">
            <summary>
            明细信息
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ISysOption">
            <summary>
            系统选项
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.ISysOption.ApplicationTitle">
            <summary>
            系统标题
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IPortalIdentity">
            <summary>
            门户自定义适用的用户
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalIdentity.priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalIdentity.Portal">
            <summary>
            门户自定义（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IPortalIdentity.Identity">
            <summary>
            用户标识（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IImageAndIcon">
            <summary>
            图片(图标)
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IImageAndIcon.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IImageAndIcon.Suffix">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IImageAndIcon.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IUnitofMeasure">
            <summary>
            计量单位
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.IUnitofMeasure.IsSameDimensionTo(Wisense.Common.Item.IUnitofMeasure)">
            <summary>
            判断两个单位是否同计量维度(无计量维度的单位彼此维度不同)。
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:Wisense.Common.Item.IUnitofMeasure.GetConversionFactorTo(Wisense.Common.Item.IUnitofMeasure)">
            <summary>
            获取和同计量维度的另一个单位间的转换因子，计量维度不同的单位间不能转换。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.UnitofMeasureID">
            <summary>
            单位编码
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.MeasurementUnitText">
            <summary>
            单位名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Commercial">
            <summary>
            商业名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Industry">
            <summary>
            工业名称
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Dimension">
            <summary>
            计量维度
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Numerator">
            <summary>
            分子
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Denominator">
            <summary>
            分母
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Exponent">
            <summary>
            指数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.AdditiveConstant">
            <summary>
            附加常量
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUnitofMeasure.Factor">
            <summary>
            和基准计量单位间的转换因子
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.BY_MINUTE">
            <summary>
            计划任务模式:按分钟
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.BY_HOUR">
            <summary>
            计划任务模式:按小时
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.BY_DAY">
            <summary>
            计划任务模式:按天
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.BY_WEEK">
            <summary>
            计划任务模式:按星期
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.BY_MONTH">
            <summary>
            计划任务模式:按月
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SPECIFIC_TIME">
            <summary>
            计划任务模式:指定时间
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.CLIENT">
            <summary>
            计划任务部署位置:客户端
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.MIDDLELAYER">
            <summary>
            计划任务部署位置:中间层
            </summary>
            关键名：中间层,Id:6FC8F85A072F43C7AA18D668CF6B05CB,ItemTypeId:8651DCAB4D714EF6AA747BB8F50719BA
        </member>
        <member name="F:Wisense.Common.ValueId.MONDAY">
            <summary>
            星期一
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.TUESDAY">
            <summary>
            星期二
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.WEDNESDAY">
            <summary>
            星期三
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.THURSDAY">
            <summary>
            星期四
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.FRIDAY">
            <summary>
            星期五
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SATURDAY">
            <summary>
            星期六
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SUNDAY">
            <summary>
            星期日
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.LOG_TYPE_INFO">
            <summary>
            日志级别：消息
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.LOG_TYPE_WARN">
            <summary>
            日志级别：警告
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.LOG_TYPE_ERROR">
            <summary>
            日志级别：错误
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.LOG_TYPE_FATAL">
            <summary>
            日志级别：灾难性错误
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SYSTEM_LOG_TYPE_DEFAULT">
            <summary>
            系统日志类型:默认类型
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SYSTEM_LOG_TYPE_ITEMLOG">
            <summary>
            系统日志类型:对象操作记录
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SYSTEM_LOG_TYPE_RUNTIMELOG">
            <summary>
            系统日志类型:RuntimeLog系统运行时日志
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.SYSTEM_LOG_TYPE_LOGINOUT">
            <summary>
            系统日志类型:登录登出
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.ALL_USER_USER_GROUP">
            <summary>
            所有用户用户组
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.ITEM_LAYER_PLATFORM">
            <summary>
            对象所属层:平台层
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.ITEM_LAYER_PRODUCTION">
            <summary>
            对象所属层:通用业务层
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.ITEM_LAYER_CUSTOM">
            <summary>
            对象所属层:个性化定制层
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RIC_VIEWER_RELATED_VIEWS_LEFT">
            <summary>
            关联对象列表被关联显示选项：左
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RIC_VIEWER_RELATED_VIEWS_RIGHT">
            <summary>
            关联对象列表被关联显示选项：右
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RIC_VIEWER_RELATED_VIEWS_INTERMIX">
            <summary>
            关联对象列表被关联显示选项：混合
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RelatedOption_CreateOnly">
            <summary>
            只创建
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RelatedOption_PickOnly">
            <summary>
            只选择
            </summary>
        </member>
        <member name="F:Wisense.Common.ValueId.RelatedOption_PickAndCreateOnly">
            <summary>
            选择和创建
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.StringUtil.Pluralize(System.String)">
            <summary>
            获得复数形式
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:Wisense.Common.Utils.IMessager">
            <summary>
            短信器（短信消息发送、接受器）
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Utils.IMessager.Send(System.String,System.String,System.Int32)">
            <summary>
            发送消息
            </summary>
            <param name="telNo">号码</param>
            <param name="msg">消息</param>
            <param name="tryTimes">发送次数（设定时间内失败才会重发）</param>
        </member>
        <member name="M:Wisense.Common.Utils.IMessager.Send(System.String,System.String)">
            <summary>
            发送消息，采用默认发送次数
            </summary>
            <param name="telNo">号码</param>
            <param name="msg">消息</param>
        </member>
        <member name="M:Wisense.Common.Utils.IMessager.Send(System.Collections.Generic.List{System.String},System.String,System.Int32)">
            <summary>
            群发消息
            </summary>
            <param name="telNos">号码组</param>
            <param name="msg">消息</param>
            <param name="tryTimes">发送次数（设定时间内失败才会重发）</param>
        </member>
        <member name="M:Wisense.Common.Utils.IMessager.Send(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            群发消息，采用默认发送次数
            </summary>
            <param name="telNos">号码组</param>
            <param name="msg">消息</param>
        </member>
        <member name="T:Wisense.Common.Item.WhereClause">
            <summary>
            对象集合where子句。
            不用包括前导逻辑运算词（即不需要写where ，不以前导逻辑运算符开头（如and, or））。
            @author 张春红
            </summary>
        </member>
        <member name="M:Wisense.Common.Item.WhereClause.#ctor(System.String)">
            <summary>
            构造一个集合where子句（过滤条件）
            </summary>
            <param name="whereClause">标准sql形式的过滤条件：x = 'a' and y = 10</param>
        </member>
        <member name="M:Wisense.Common.Item.WhereClause.AddParameter(Wisense.Common.Item.NamedSqlParameter)">
            <summary>
            添加一个命名sql参数
            </summary>
            <param name="parameter">命名sql参数</param>
            <returns>自身（this）</returns>
        </member>
        <member name="M:Wisense.Common.Item.WhereClause.ToString">
            <summary>
            字符串形式的where条件。
            标准sql形式的过滤条件：x = 'a' and y = 10
            等同于“SqlString”属性
            </summary>
            <returns>字符串形式的where条件</returns>
        </member>
        <member name="M:Wisense.Common.Item.WhereClause.And(Wisense.Common.Item.WhereClause)">
            <summary>
            并入Where子句
            </summary>
            <param name="andWhereClause">要并入的where子句</param>
            <returns>返回并入后的当前where子句</returns>
        </member>
        <member name="M:Wisense.Common.Item.WhereClause.Or(Wisense.Common.Item.WhereClause)">
            <summary>
            或入Where子句
            </summary>
            <param name="orWhereClause">要或入的where子句</param>
            <returns>返回或入后的当前where子句</returns>
        </member>
        <member name="P:Wisense.Common.Item.WhereClause.Parameters">
            <summary>
            获取命名sql参数
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.WhereClause.SqlString">
            <summary>
            获取或设置字符串形式的where条件。
            标准sql形式的过滤条件：x = 'a' and y = 10
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.WhereClause.IsValidWhereClause">
            <summary>
            判断当前where子句是否有效
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.ItemDataVersion">
            <summary>
            对象框架，对象数据版本
            @author 张春红
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemDataVersion.Original">
            <summary>
            原始
            </summary>
        </member>
        <member name="F:Wisense.Common.Item.ItemDataVersion.Current">
            <summary>
            当前
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUser.LoginName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IUser.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IMainMenuItemTypeItem">
            <summary>
            对象类型子菜单
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IMainMenuItemTypeItem.RefItemTypeId">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IItemIntroductionTypeDefine">
            <summary>
            对象引入类型定义
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemIntroductionTypeDefine.DirectoryLibrary">
            <summary>
            目录库（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IItemIntroductionTypeDefine.FileType">
            <summary>
            文件类型（被关联对象）
            </summary>
        </member>
        <member name="T:Wisense.Common.Item.IIconLibFiles">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIconLibFiles.IconLibrary">
            <summary>
            图标库（源对象）
            </summary>
        </member>
        <member name="P:Wisense.Common.Item.IIconLibFiles.File">
            <summary>
            文件（被关联对象）
            </summary>
        </member>
    </members>
</doc>
